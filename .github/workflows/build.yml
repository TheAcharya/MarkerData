name: build

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Check Build'
        required: true
        default: 'no'

jobs:
  build:
    runs-on: macos-15

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: List Xcode Installations
      run: sudo ls -1 /Applications | grep "Xcode"
      
    - name: Select Xcode 16.2
      run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
    
    - name: Change to Project Directory
      run: cd Source/Marker\ Data

    - name: Prepare Directories
      run: |
        PARENT=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )
        mkdir -p "$PARENT/dist/dmg-builds/app-build"
        mkdir -p "$PARENT/dist/dmg-builds/sdk"
        
    - name: Copy Workflow Extensions SDK
      run: |
        mkdir -p dist/dmg-builds/sdk
        cp -R ./SDK/Workflow_Extensions_1.0.3.dmg ./dist/dmg-builds/sdk
        
    - name: Mount Workflow Extensions DMG
      run: |
        hdiutil attach ./dist/dmg-builds/sdk/Workflow_Extensions_1.0.3.dmg
    
    - name: Install Workflow Extensions SDK
      run: |
        sudo installer -pkg /Volumes/WorkflowExtensionsSDK/WorkflowExtensionsSDK.pkg -target /
    
    - name: View Volume Directory
      run: |
        ls /Volumes

    - name: View Workflow Extensions SDK DMG Directory
      run: |
        ls /Volumes/WorkflowExtensionsSDK

    - name: Unmount Workflow Extensions SDK DMG
      run: |
        hdiutil detach /Volumes/WorkflowExtensionsSDK

    - name: Check Installed Workflow Extensions SDK Directory
      run: |
        ls /Library/Developer/SDKs

    - name: Build Marker Data
      run: |
        PARENT=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )
        PROJECT_PATH="Source/Marker Data/Marker Data.xcodeproj"
        SCHEME="Marker Data"
        CONFIGURATION="Release"
        DESTINATION="platform=macOS,arch=arm64"
        BUILD_FOLDER="$PARENT/dist/dmg-builds/app-build"
        
        xcodebuild -project "$PROJECT_PATH" -scheme "$SCHEME" -configuration "$CONFIGURATION" -destination "$DESTINATION" -derivedDataPath "$BUILD_FOLDER" clean build ONLY_ACTIVE_ARCH=NO EXCLUDED_ARCHS="x86_64" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO -allowProvisioningUpdates 2>&1 | xcbeautify | grep -v "requires entitlements" | grep -v "isn't code signed" && exit ${PIPESTATUS[0]}
